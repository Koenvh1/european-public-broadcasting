<!DOCTYPE html>
<html lang="en">
{% include "header.twig" %}
<body style="background: black">
<video id="videoPlayer" autoplay controls data-dashjs-player controlsList="nodownload" crossorigin="anonymous"></video>

<div class="modal" id="errorModal" style="display: none">
    <h1>This video could not be loaded</h1>
    <p>
        It appears that the video you tried to play could not be loaded.
        Please verify that the original video does have subtitles, and can be loaded from your country.
        If the issue persists, create an issue on <a href="https://github.com/Koenvh1/european-public-broadcasting">GitHub</a>.
    </p>
</div>

<div class="modal browser-warning" style="display: none">
    <h1>Your browser is not supported</h1>
    <p>
        European Public Broadcasting does not work with your current browser.
        Please use a modern browser to access European Public Broadcasting, such as the latest version of Chrome, Firefox, Edge, Opera or Safari.
        If the issue persists, create an issue on <a href="https://github.com/Koenvh1/european-public-broadcasting">GitHub</a>.
    </p>
</div>

<div class="modal" id="localFile" style="">
    <h1>Open a local file</h1>
    <h2>
        Video file:
    </h2>
    <input type="file" name="videoFile" id="videoFile">
    <h2>
        Captions file:
    </h2>
    <input type="file" name="captionsFile" id="captionsFile">
    <h2>
        Source language (ISO-639-1):
    </h2>
    <input type="text" name="sourceLanguage" id="sourceLanguage">
    <p></p>
    <button id="loadLocalFile" class="btn">Open this file</button>
</div>

<script src="js/browser-warning.js"></script>

<script src="https://cdn.jsdelivr.net/npm/hls.js@latest"></script>
<script src="https://cdn.dashjs.org/latest/dash.all.min.js"></script>

<script src="https://unpkg.com/nprogress@0.2.0/nprogress.js"></script>
<script src="js/Player.js"></script>
<script src="js/Utils.js"></script>
<script src="https://cdn.plyr.io/3.6.2/plyr.polyfilled.js"></script>

<script>
    NProgress.start();
    let p = new Player();
    const sourceLanguage = "{{ sourceLanguage|escape("js") }}";
    p.setSourceLanguage(sourceLanguage);

    const loaded = () => {
        document.getElementById("localFile").style.display = "none";

        let language = localStorage.getItem("language");
        if (language == null) {
            language = p.findBestLanguage({{ languages|json_encode|raw }})
        }

        const plyr = new Plyr('#videoPlayer', {
            controls: ['play-large', 'play', 'progress', 'current-time', 'duration', 'mute', 'volume', 'settings', 'fullscreen'],
            captions: {
                active: true,
                language: localStorage.getItem("language") || language,
                update: true
            },
            storage: {
                enabled: false
            },
            disableContextMenu: false
        });
        plyr.on("languagechange", () => {
            if (plyr.language) {
                localStorage.setItem("language", plyr.language);
                p.setLanguage(plyr.language);
                // This fixes an issue with captions not being reset for some reason:
                plyr.currentTime = plyr.currentTime;
            }
        });

        plyr.on("canplay", () => {
            p.setLanguage(plyr.language || language);
            NProgress.done();
        });

        p.setLanguage(localStorage.getItem("language") || language);
    };

    if ("{{ video|escape("js") }}" !== "manual") {
        p.load("{{ video|escape("js") }}", "{{ caption|escape("js") }}", {{ protection|json_encode|raw }}).then(loaded);
    }

    document.getElementById("loadLocalFile").addEventListener("click", (e) => {
        let videoInput = document.getElementById("videoFile").files[0];
        let captionsInput = document.getElementById("captionsFile").files[0];

        let sourceLanguageInput = document.getElementById("sourceLanguage").value;

        let videoFile = URL.createObjectURL(videoInput);
        let captionsFile = URL.createObjectURL(captionsInput);
        p = new Player();
        p.setSourceLanguage(sourceLanguageInput);
        p.load(videoFile, captionsFile, null).then(loaded);
    });
</script>
</body>
</html>
